Deep Learning - MATLAB & Simulink
Autor desconocido
mathworks.com

Formación
Eventos
Recursos de aprendizaje
Visite el Centro de ayuda para explorar la documentación de nuestros productos, cooperar con la comunidad usuaria, consultar notas de versión y mucho más.
Vídeos de MATLAB y Simulink
Explore productos, vea demostraciones y descubra las novedades de productos.
Empresa
Ofertas de empleo

Descarbonización en MathWorks
Descubra cómo MathWorks protege y restablece los recursos naturales.
Buscar
Deep Learning es una rama de Machine Learning que utiliza redes neuronales para enseñar a equipos informáticos a hacer lo que resulta natural para las personas: aprender a partir de ejemplos. Con Deep Learning, un modelo aprende a realizar tareas de clasificación o regresión directamente a partir de datos de imágenes, texto o sonido. Los modelos de Deep Learning pueden alcanzar una precisión excepcional que, con frecuencia, supera el propio rendimiento humano.
Contenido
Los modelos de Deep Learning se basan en arquitecturas de redes neuronales. Inspirada en el cerebro humano, una red neuronal consta de neuronas o nodos interconectados en una estructura en capas que relacionan las entradas con las salidas deseadas. Las neuronas situadas entre las capas de entrada y salida de una red neuronal se denominan capas ocultas. El término “Deep” (profundo) normalmente alude a la cantidad de capas ocultas de la red neuronal. Los modelos de Deep Learning pueden tener cientos o incluso miles de capas ocultas.
Arquitectura de red neuronal típica.
Los modelos de Deep Learning se entrenan empleando grandes conjuntos de datos etiquetados. Suelen aprender directamente a partir de los datos, sin necesidad de extraer características manualmente. Si bien la teoría de una red neuronal artificial se elaboró por primera vez en 1958, Deep Learning requiere una potencia de cálculo significativa que no fue posible hasta la década de los 2000. En la actualidad, los recursos informáticos permiten crear y entrenar redes con cientos de conexiones y neuronas.
Las GPU de alto rendimiento cuentan con una arquitectura paralela que resulta eficiente para Deep Learning. En combinación con clusters o cálculo en la nube, esto permite reducir el tiempo de entrenamiento de una red de Deep Learning de semanas a horas, o incluso minutos.



			Introducción a Deep Learning | Iniciación a Deep Learning




			5 motivos principales para usar Deep Learning con MATLAB




			IA en ingeniería: Desarrollo de un sistema de IA

Las redes neuronales convolucionales (CNN), las redes neuronales recurrentes (RNN) y los modelos de transformadores son tres tipos de modelos de Deep Learning.
CNN: Una red CNN convoluciona características aprendidas con datos de entrada y emplea capas convolucionales en 2D. Esta arquitectura resulta adecuada para procesar datos en 2D, como imágenes; CNN extrae características directamente de las imágenes. Las características relevantes se aprenden mientras la red se entrena con un conjunto de imágenes. Este proceso automatizado de extracción de características contribuye significativamente a la precisión de los modelos de Deep Learning en tareas de clasificación de imágenes. Además, las CNN se pueden utilizar para clasificar otros tipos de datos, como texto y series temporales.
Ejemplo de una red neuronal convolucional.
RNN: Una red neuronal recurrente (RNN) es una arquitectura de red de Deep Learning que realiza predicciones sobre series temporales o datos secuenciales. Son especialmente eficaces para trabajar con datos secuenciales de longitud variable y resolver problemas de clasificación de señales naturales, procesamiento del lenguaje y análisis de vídeos. La red de memoria a corto-largo plazo (LSTM) es un tipo especial de RNN que es más eficiente en aprender dependencias a largo plazo que una RNN simple.
Transformadores: Los transformadores están diseñados para realizar un seguimiento de las relaciones entre los componentes de una secuencia. Se basan en un mecanismo de autoatención para capturar dependencias globales entre entrada y salida. Se suelen emplear para procesamiento del lenguaje natural, y son la base de modelos de lenguaje de gran tamaño (LLM) como BERT y ChatGPT™.
Puede crear un modelo de Deep Learning desde cero o a partir de un modelo de Deep Learning previamente entrenado, que puede aplicar o adaptar a una tarea.
Entrenamiento desde cero: Para entrenar un modelo de Deep Learning desde cero, debe recopilar un gran conjunto de datos etiquetados y diseñar una arquitectura de red que aprenda las características y el modelo. Este enfoque es adecuado para aplicaciones nuevas o específicas, o aplicaciones para las que no existan modelos preexistentes. La principal desventaja de este enfoque es que requiere un conjunto de datos de gran tamaño (con anotación ground-truth) y el entrenamiento puede llevar horas o semanas, dependiendo de la tarea y los recursos informáticos.
Transferencia del aprendizaje: En aplicaciones de Deep Learning como clasificación de imágenes, visión artificial, procesamiento de audio y procesamiento del lenguaje natural, es común utilizar la transferencia del aprendizaje. Esto implica ajustar un modelo de Deep Learning previamente entrenado. Se comienza con un modelo existente para clasificación de imágenes, tal como SqueezeNet o GoogLeNet, al que se proporcionan datos nuevos que contienen clases no vistas previamente. Después de realizar algunos ajustes en la red, puede ejecutar una tarea nueva, por ejemplo, categorizar solo perros o gatos, en lugar de 1000 objetos diferentes. La ventaja de este enfoque es que requiere menos datos, lo que reduce la duración del entrenamiento significativamente.
Un modelo de Deep Learning previamente entrenado también se puede emplear para extraer características. Puede utilizar las activaciones de capas como características para entrenar otro modelo de Machine Learning, por ejemplo, una máquina de vectores de soporte (SVM). También puede servirse del modelo previamente entrenado como componente básico de otro modelo de Deep Learning. Por ejemplo, puede utilizar una CNN de clasificación de imágenes como extractor de características para un detector de objetos.
Deep Learning es una forma especializada de Machine Learning; ambos forman parte del campo de la inteligencia artificial (IA). Machine Learning ofrece diversas técnicas y modelos que puede seleccionar en función de la aplicación, tamaño de los datos que va a procesar y tipo de problema que desea resolver.
La elección entre algoritmos de Deep Learning o Machine Learning para una aplicación de inteligencia artificial depende de los objetivos y requisitos del sistema.
La principal diferencia entre Deep Learning y Machine Learning es la precisión. Por lo general, Deep Learning logra mayor precisión y ofrece más automatización del flujo de trabajo que Machine Learning. Las principales deficiencias de los modelos de Deep Learning radican en que son más complejos y requieren conjuntos de datos de entrenamiento de mayor tamaño, por lo que se tarda más en entrenarlos. Existen métodos para superar, o al menos paliar, estas deficiencias.
Un flujo de trabajo de Machine Learning comienza con la extracción manual de características relevantes de los datos. Estas características se utilizan luego para crear un modelo que puede realizar predicciones sobre datos nuevos. En un flujo de trabajo de Deep Learning, en aplicaciones como reconocimiento de imágenes y visión artificial, las características relevantes se extraen directamente de los datos de imagen. En el caso de señales o datos de texto, Deep Learning puede reducir el preprocesamiento de datos necesario.
Comparación de Machine Learning (izquierda) con Deep Learning (derecha) para categorizar un vehículo.
La precisión de Deep Learning aumenta con los datos. Es decir, el rendimiento de Deep Learning sigue mejorando a medida que aumenta el tamaño de los datos de entrenamiento. Por lo general, Deep Learning requiere una cantidad de datos muy grande para entrenar el modelo, por ejemplo, miles de imágenes para realizar clasificación de imágenes. El acceso a GPU de alto rendimiento puede reducir significativamente la duración del entrenamiento. Como alternativa, modificar y volver a entrenar una red previamente entrenada con transferencia del aprendizaje suele ser mucho más rápido, y requiere menos datos etiquetados que entrenar una red desde cero.
Si no se cuenta con suficientes datos de entrenamiento, puede complementar los datos existentes con datos sintéticos. Para generar datos sintéticos, puede emplear redes generativas antagónicas (GAN), o crear y simular un modelo del sistema físico.
Los modelos de Deep Learning, en comparación con los de Machine Learning, son mucho más complejos y grandes, ya que se crean con cientos de capas interconectadas. A medida que la tecnología de Deep Learning avanza, la complejidad de la arquitectura de redes de Deep Learning sigue creciendo. La complejidad y el tamaño contribuyen a la precisión superior de Deep Learning.
Debido a su complejidad, los modelos de Deep Learning se suelen considerar “opacos” ya que adolecen de interpretabilidad. Un campo emergente, denominado IA explicable, ofrece técnicas para explicar el comportamiento de modelos de Deep Learning en términos humanos. Por ejemplo, puede utilizar Grad-CAM y LIME para explicar las predicciones de modelos de Deep Learning sobre tareas de clasificación de imágenes.
Los modelos de Deep Learning no solo se ejecutan en equipos de escritorio. El despliegue de modelos de Deep Learning cada vez más grandes y complejos en dispositivos con recursos limitados es un desafío creciente al que se enfrenta un gran número de profesionales de Deep Learning. Existen muchas técnicas para comprimir modelos de Deep Learning, que se pueden utilizar para reducir el tamaño de los modelos de Deep Learning en disco, memoria en tiempo de ejecución y tiempos de inferencia, manteniendo al mismo tiempo una alta precisión.
Proyección de una capa totalmente conectada. La proyección es un método de compresión de red.
Deep Learning es una tecnología clave presente en vehículos autónomos que permite reconocer una señal de stop y distinguir un peatón de una farola. Resulta fundamental para el control por voz en dispositivos, teléfonos, tabletas, televisores y sistemas manos libres. Deep Learning concita mucha atención últimamente, y existen razones de peso para que sea así. Deep Learning permite que sistemas y equipos informáticos realicen tareas complejas cada vez con más precisión y automatización.
Deep Learning se aplica en visión artificial, procesamiento de imágenes, conducción autónoma y procesamiento de señales, y muchos otros ámbitos. Cada área de aplicación de Deep Learning puede abarcar varias subáreas de aplicación. Por ejemplo, clasificación de imágenes, detección de objetos y segmentación semántica son subaplicaciones de visión artificial. A medida que se desarrollen nuevos métodos y tecnologías de Deep Learning, seguirán creciendo las aplicaciones de Deep Learning y se descubrirán nuevas subaplicaciones en las que Deep Learning pueda mejorar la precisión.
La inspección visual consiste en la inspección de piezas basada en imágenes mediante una cámara que escanea cada pieza sometida a prueba para detectar fallos y defectos de calidad. Empleando técnicas de Deep Learning y visión artificial, se puede automatizar la inspección visual para detectar defectos de fabricación en muchas industrias, como biotecnología, automoción y semiconductores.



		

		
			
			Detección de defectos en placas de circuito impreso con la red YOLOX.

Las señales electroencefalográficas (EEG) son las señales cerebrales más accesibles, y por ello no sorprende que sean también las más investigadas. Deep Learning se puede emplear para diagnosticar epilepsia automáticamente y predecir convulsiones epilépticas mediante señales de EEG.



		

		
			
			Clasificación de datos de EEG con una red convolucional de tiempo-frecuencia.

Los sensores virtuales se pueden emplear en todo sistema que requiera supervisión y control en tiempo real, y donde el uso de sensores físicos resulte costoso o poco práctico. Puede combinar Deep Learning con diseño basado en modelos para diseñar sensores virtuales.



		

		
			
			Diseño de sensores virtuales con IA y diseño basado en modelos.

Descubra cómo Moffit Cancer Center utilizó Deep Learning para acelerar el descubrimiento científico y personalizar tratamientos.
MATLAB® proporcionó todas las herramientas necesarias para aplicar correctamente IA en captura de imágenes y radiómica. MATLAB se empleó en procesamiento de datos, eliminación de ruido y segmentación de imágenes.
Utilizar MATLAB con Deep Learning Toolbox™ permite diseñar, analizar y simular redes de Deep Learning. Puede ampliar los flujos de trabajo de Deep Learning a muchas aplicaciones, como visión artificial, procesamiento de señales y procesamiento del lenguaje natural, empleando toolboxes como Computer Vision Toolbox™, Signal Processing Toolbox™ y Text Analytics Toolbox™.
Flujo de trabajo de Deep Learning, desde preparación de datos hasta despliegue.
Deep Learning requiere grandes cantidades de datos de buena calidad. Puede utilizar almacenes de datos para gestionar cómodamente conjuntos de datos demasiado grandes para la capacidad de la memoria. Puede utilizar apps de low-code y funciones integradas para mejorar la calidad de los datos y etiquetarlos con ground-truth automáticamente.
 
Creación de red LSTM de forma programática.
Obtención de modelos previamente entrenados para adaptarlos a una tarea de Deep Learning.
Diseño, análisis y modificación de redes de Deep Learning gráficamente con Deep Network Designer.
Con MATLAB, puede visualizar y verificar modelos de Deep Learning y sus predicciones.
Utilice bloques de Deep Learning Toolbox para integrar redes entrenadas con sistemas de Simulink®. Esto permite probar la integración de modelos de Deep Learning con otras partes del sistema.
Puede desplegar modelos de Deep Learning en dispositivos edge, sistemas integrados o la nube. Antes del despliegue, puede comprimir los modelos realizando cuantización, proyección o poda.
Amplíe sus conocimientos con documentación, ejemplos, vídeos y mucho más.
Explore áreas temáticas similares comúnmente asociadas con productos de MATLAB y Simulink.
30 días de exploración a su alcance
Seleccione un país/idioma
Seleccione un país/idioma para obtener contenido traducido, si está disponible, y ver eventos y ofertas de productos y servicios locales. Según su ubicación geográfica, recomendamos que seleccione: .

También puede seleccionar uno de estos países/idiomas:
Cómo obtener el mejor rendimiento
Seleccione China (en idioma chino o inglés) para obtener el mejor rendimiento. Los sitios web de otros países no están optimizados para ser accedidos desde su ubicación geográfica.
América
Europa
Asia-Pacífico
Comuníquese con su oficina local
MathWorks
Accelerating the pace of engineering and science
MathWorks es el líder en el desarrollo de software de cálculo matemático para ingenieros y científicos.
Descubra…
Explorar productos
Probar o comprar
Aprender a utilizar
Obtener soporte
Acerca de MathWorks
© 1994-2024 The MathWorks, Inc.
